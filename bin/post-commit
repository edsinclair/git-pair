#!/usr/bin/env ruby
#
# This post-commit hook looks for one or more initials inside parentheses at the end of
# the commit message and uses them to amend the commit author field using the git pair authors
# matching those initials.
#
# To enable this hook, add a symlink to project/.git/hooks/post-commit that points to this file

revision, author, body = %x[git log HEAD -1 --format="%H<separator>%an <%ae><separator>%B"].split("<separator>")

pair_regex     = Regexp.new(/^([^(]*) \(([^)]*)\)$/)
initials_regex = Regexp.new(/\/|\s|,/)

if body.match(pair_regex)
  message  = $1.chomp # raw commit message without initials
  initials = $2.split(initials_regex)

  git_pair_author  = %x[git pair -s "#{initials.join(' ')}"].chomp
  git_amend_author = %Q(git commit --amend --author="#{git_pair_author}" --message="#{message}")

  if git_pair_author.empty?
    puts "One or more of the initials: (#{initials.join(',')}) didn't match any of the git pair authors."
    puts "You can use the following command to manually amend the HEAD commit:\n\n"
    puts %Q(  git commit --amend --author="First Last & First Last <pair+fl+fl@example.com>"\n\n)
  elsif git_pair_author != author
    puts "Amending revision: #{revision} author from: #{author}"
    puts "To: #{git_pair_author}"
    system(git_amend_author)
    new_sha = %x[git rev-parse HEAD].chomp
    puts "Succeeded! New SHA is: #{new_sha}"
  end
end